name: Commnader_Wars_AndroidTest
on: [push]
env:
  BUILD_TYPE: Release
  QT_Version: '6.3.0'
  
jobs:
  install:
    name: Android Build
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            COMPILER_VERSION: 'android_armv7'
            qtPath: 'android_armv7'
            target: 'android'
            target-api-level: '27'
            abi : "armeabi-v7a"
            COMPILER_TOOLS_VERSION: 'win64_mingw'
            qtCoreToolsPath: 'mingw_64'
            NDK_Version: r22b
            installerCommands1: 'choco install jom'
            installerCommands2: ''
            cmakeOptions: ''            
            
    runs-on: ${{matrix.os}}
    defaults:
      run:
        shell: bash
        
    steps:
    - name: Checkout openssl
      uses: actions/checkout@v3
      with:
          repository: 'KDAB/android_openssl'
          ref: '1.1.1l_1.0.2u'
          path: 'android_openssl'

    - name: Checkout source code
      uses: actions/checkout@v3


    - name: Install android qt
      uses: jurplel/install-qt-action@v2.14.0
      with:      
          aqtversion: '==2.0.2'
          target: 'desktop'
          version: ${{env.QT_Version}}
          arch: ${{matrix.COMPILER_TOOLS_VERSION}}
          dir: '${{github.workspace}}/qt/'
          install-deps: "true"

    - name: Install host os Qt
      uses: jurplel/install-qt-action@v2.14.0
      with:      
          aqtversion: '==2.0.2'
          target: ${{matrix.target}}
          version: ${{env.QT_Version}}
          arch: ${{matrix.COMPILER_VERSION}}
          modules: 'qtmultimedia'
          dir: '${{github.workspace}}/qt/'
          install-deps: "true"

    - name: Install OS Dependencies 1
      run: ${{matrix.installerCommands1}}

    - name: Install OS Dependencies 2
      run: ${{matrix.installerCommands2}}

    - name: setup-ndk
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: ${{matrix.NDK_Version}}

    - name: Configure CMake
      run:  |
        cmake \
        -B "${{github.workspace}}/build" \
        -DCMAKE_GENERATOR="NMake Makefiles JOM" \
        -DCMAKE_BUILD_TYPE="${{env.BUILD_TYPE}}" \
        -DQT_QMAKE_EXECUTABLE="${{github.workspace}}/qt/Qt/${{env.QT_Version}}/${{matrix.qtPath}}/bin/qmake.bat" \
        -DCMAKE_PREFIX_PATH="${{github.workspace}}/qt/Qt/${{env.QT_Version}}/${{matrix.qtPath}}/" \
        -DQT_HOST_PATH="${{github.workspace}}/qt/Qt/${{env.QT_Version}}/${{matrix.qtCoreToolsPath}}" \
        -DANDROID_NATIVE_API_LEVEL="${{ matrix.target-api-level }}" \
        -DANDROID_ABI="${{matrix.abi}}" \
        -DANDROID_STL="c++_shared" \
        -DCMAKE_FIND_ROOT_PATH="${{github.workspace}}/qt/Qt/${{env.QT_Version}}/${{matrix.qtPath}}/" \
        -DCMAKE_TOOLCHAIN_FILE="C:/hostedtoolcache/windows/ndk/r22b/x64/build/cmake/android.toolchain.cmake" \
        -DANDROID_NDK="C:/hostedtoolcache/windows/ndk/r22b/x64" \
        -DQT_NO_GLOBAL_APK_TARGET_PART_OF_ALL=ON \
        -DCMAKE_INSTALL_PREFIX="${{github.workspace}}/install" \
        -DOPENSSL_USE_STATIC_LIBS=ON \
        -DOPENSSL_INCLUDE_DIR="${{github.workspace}}/android_openssl/static/include"
        -DOPENSSL_LIB_PATH="${{github.workspace}}/android_openssl/static/lib/multiabi"

    - name: Build
      working-directory: '${{github.workspace}}/build'
      run: cmake --build '${{github.workspace}}/build' --config $BUILD_TYPE --target install -j4
